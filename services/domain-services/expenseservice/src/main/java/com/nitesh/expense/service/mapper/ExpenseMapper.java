package com.nitesh.expense.service.mapper;

import com.nitesh.expense.service.dto.ExpenseRequestDTO;
import com.nitesh.expense.service.dto.ExpenseResponseDTO;
import com.nitesh.expense.service.entity.Expense;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;

@Mapper(componentModel = "spring")
public interface ExpenseMapper {


    // Request DTO -> Entity
    @Mapping(target = "expenseId", ignore = true) // ID is generated by DB
    @Mapping(target = "exchangeRate", ignore = true) // not in request
    @Mapping(target = "expenseInputTime", ignore = true) // handled by @PrePersist
    Expense toEntity(ExpenseRequestDTO requestDTO);

    // Entity -> Response DTO
    ExpenseResponseDTO toResponseDTO(Expense expense);


    // Request DTO -> Entity
    @Mapping(target = "expenseId", ignore = true) // ID is generated by DB
    @Mapping(target = "exchangeRate", ignore = true) // not in request
    @Mapping(target = "expenseInputTime", ignore = true) // handled by @PrePersist
    void map(ExpenseRequestDTO dto, @MappingTarget Expense entity);
}

